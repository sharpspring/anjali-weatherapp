# Give staging smaller resources than production.# We created a macro that will output the above
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  namespace: anjali-training
  labels:
    role: php
spec:
  replicas: 1
  selector:
    matchLabels:
      role: php
  template:
    metadata:
      labels:
        role: php
    spec:
      # The following "affinity" and "tolerations" blocks exist to schedule this
      # container onto the "leaky" staging server. The "leaky" server has egress
      # and ingress access to the public Internet. By default we want to
      # restrict things running on the staging cluster to NOT have Internet
      # access. This is because we don't want to accidentally send emails to
      # customers, charge credit cards, etc. If you DO need Internet access, and
      # are willing to assume the risk that that entails, then use this
      # Deployment which has the appropriate affinity and toleration.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: leaky
                operator: In
                values:
                - "true"
      tolerations:
      - effect: NoSchedule
        key: leaky
        operator: Equal
        value: "true"
      containers:
      - name: php
        image: us.gcr.io/sharpspring-us/anjali-weatherapp:7a2c0d3
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "100m"
            memory: "100Mi"

# vim:ft=ansible:
